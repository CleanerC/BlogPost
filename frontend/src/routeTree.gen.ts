/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as CreateblogImport } from './routes/createblog'
import { Route as BlogsImport } from './routes/blogs'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const CreateblogRoute = CreateblogImport.update({
  id: '/createblog',
  path: '/createblog',
  getParentRoute: () => rootRoute,
} as any)

const BlogsRoute = BlogsImport.update({
  id: '/blogs',
  path: '/blogs',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/blogs': {
      id: '/blogs'
      path: '/blogs'
      fullPath: '/blogs'
      preLoaderRoute: typeof BlogsImport
      parentRoute: typeof rootRoute
    }
    '/createblog': {
      id: '/createblog'
      path: '/createblog'
      fullPath: '/createblog'
      preLoaderRoute: typeof CreateblogImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/blogs': typeof BlogsRoute
  '/createblog': typeof CreateblogRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/blogs': typeof BlogsRoute
  '/createblog': typeof CreateblogRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/blogs': typeof BlogsRoute
  '/createblog': typeof CreateblogRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/blogs' | '/createblog'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/blogs' | '/createblog'
  id: '__root__' | '/' | '/blogs' | '/createblog'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BlogsRoute: typeof BlogsRoute
  CreateblogRoute: typeof CreateblogRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BlogsRoute: BlogsRoute,
  CreateblogRoute: CreateblogRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/blogs",
        "/createblog"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/blogs": {
      "filePath": "blogs.tsx"
    },
    "/createblog": {
      "filePath": "createblog.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
