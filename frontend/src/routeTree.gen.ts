/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProjectsImport } from './routes/projects'
import { Route as CreateblogImport } from './routes/createblog'
import { Route as BlogsImport } from './routes/blogs'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as ShowblogIdImport } from './routes/showblog.$id'
import { Route as EditblogIdImport } from './routes/editblog.$id'

// Create/Update Routes

const ProjectsRoute = ProjectsImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => rootRoute,
} as any)

const CreateblogRoute = CreateblogImport.update({
  id: '/createblog',
  path: '/createblog',
  getParentRoute: () => rootRoute,
} as any)

const BlogsRoute = BlogsImport.update({
  id: '/blogs',
  path: '/blogs',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ShowblogIdRoute = ShowblogIdImport.update({
  id: '/showblog/$id',
  path: '/showblog/$id',
  getParentRoute: () => rootRoute,
} as any)

const EditblogIdRoute = EditblogIdImport.update({
  id: '/editblog/$id',
  path: '/editblog/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/blogs': {
      id: '/blogs'
      path: '/blogs'
      fullPath: '/blogs'
      preLoaderRoute: typeof BlogsImport
      parentRoute: typeof rootRoute
    }
    '/createblog': {
      id: '/createblog'
      path: '/createblog'
      fullPath: '/createblog'
      preLoaderRoute: typeof CreateblogImport
      parentRoute: typeof rootRoute
    }
    '/projects': {
      id: '/projects'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsImport
      parentRoute: typeof rootRoute
    }
    '/editblog/$id': {
      id: '/editblog/$id'
      path: '/editblog/$id'
      fullPath: '/editblog/$id'
      preLoaderRoute: typeof EditblogIdImport
      parentRoute: typeof rootRoute
    }
    '/showblog/$id': {
      id: '/showblog/$id'
      path: '/showblog/$id'
      fullPath: '/showblog/$id'
      preLoaderRoute: typeof ShowblogIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/blogs': typeof BlogsRoute
  '/createblog': typeof CreateblogRoute
  '/projects': typeof ProjectsRoute
  '/editblog/$id': typeof EditblogIdRoute
  '/showblog/$id': typeof ShowblogIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/blogs': typeof BlogsRoute
  '/createblog': typeof CreateblogRoute
  '/projects': typeof ProjectsRoute
  '/editblog/$id': typeof EditblogIdRoute
  '/showblog/$id': typeof ShowblogIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/blogs': typeof BlogsRoute
  '/createblog': typeof CreateblogRoute
  '/projects': typeof ProjectsRoute
  '/editblog/$id': typeof EditblogIdRoute
  '/showblog/$id': typeof ShowblogIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/blogs'
    | '/createblog'
    | '/projects'
    | '/editblog/$id'
    | '/showblog/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/blogs'
    | '/createblog'
    | '/projects'
    | '/editblog/$id'
    | '/showblog/$id'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/blogs'
    | '/createblog'
    | '/projects'
    | '/editblog/$id'
    | '/showblog/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  BlogsRoute: typeof BlogsRoute
  CreateblogRoute: typeof CreateblogRoute
  ProjectsRoute: typeof ProjectsRoute
  EditblogIdRoute: typeof EditblogIdRoute
  ShowblogIdRoute: typeof ShowblogIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  BlogsRoute: BlogsRoute,
  CreateblogRoute: CreateblogRoute,
  ProjectsRoute: ProjectsRoute,
  EditblogIdRoute: EditblogIdRoute,
  ShowblogIdRoute: ShowblogIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/blogs",
        "/createblog",
        "/projects",
        "/editblog/$id",
        "/showblog/$id"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/blogs": {
      "filePath": "blogs.tsx"
    },
    "/createblog": {
      "filePath": "createblog.tsx"
    },
    "/projects": {
      "filePath": "projects.tsx"
    },
    "/editblog/$id": {
      "filePath": "editblog.$id.tsx"
    },
    "/showblog/$id": {
      "filePath": "showblog.$id.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
